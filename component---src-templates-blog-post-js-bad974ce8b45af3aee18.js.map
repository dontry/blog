{"version":3,"sources":["webpack:///./src/components/Tag/Tag.js","webpack:///./src/components/Tag/index.js","webpack:///./src/components/MarkdownDoc/Title.js","webpack:///./src/components/MarkdownDoc/Meta.js","webpack:///./src/components/MarkdownDoc/Body.js","webpack:///./src/components/MarkdownDoc/index.js","webpack:///./src/components/Button/index.js","webpack:///./src/components/Button/Button.js","webpack:///./src/templates/blog-post.js"],"names":["Wrapper","styled","span","props","bg","theme","colors","light","fontSizes","small","darken","SmallWrapper","xsmall","SmallTag","tag","to","Tag","h1","MarkdownTitle","title","h4","Time","time","TagWrapper","div","Meta","meta","date","tags","dateTime","Date","toLocaleDateString","map","key","MarkdownBody","html","dangerouslySetInnerHTML","__html","media","lessThan","MarkdownDoc","Title","Body","Button","button","primaryBlue","lighten","ButtonGroup","Flex","BlogPostTemplate","data","pathContext","location","next","prev","post","markdownRemark","frontmatter","fields","Container","path"],"mappings":"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","file":"component---src-templates-blog-post-js-bad974ce8b45af3aee18.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { darken } from 'polished';\n\nconst Wrapper = styled.span`\n  display: inline-block;\n  position: relative;\n  background-color: ${props => props.bg || props.theme.colors.light};\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 15px;\n  padding-right: 15px;\n  border-bottom-right-radius: 2px;\n  border-top-right-radius: 2px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: ${props => props.theme.fontSizes.small};\n  line-height: 1.1;\n  min-width: 50px;\n  text-align: right;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  white-space: nowrap;\n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    background-color: inherit;\n    border: 12px solid #fff;\n    border-right-color: transparent;\n    border-radius: 100% 0 0 100%;\n    left: -20px;\n    top: 0px;\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    width: 6px;\n    height: 6px;\n    left: 0px;\n    top: 9px;\n    border-radius: 50%;\n    background-color: #fff;\n  }\n  & a {\n    font-weight: 500;\n    color: ${props => props.bg || darken(0.5, props.theme.colors.light)};\n    transition: color 0.2s ease-out;\n  }\n  & a:hover {\n    color: ${props => props.bg || darken(0.9, props.theme.colors.light)};\n  }\n`;\n\nconst SmallWrapper = styled(Wrapper)`\n  font-size: ${props => props.theme.fontSizes.xsmall};\n  margin-bottom: 0;\n  &::before {\n    border: 10px solid #fff;\n    border-right-color: transparent;\n  }\n  &::after {\n    top: 7px;\n  }\n`;\n\nconst Tag = ({ tag, to }) => (\n  <Wrapper>\n    <Link to={to || `/archive/tags/${tag}`}>{tag}</Link>\n  </Wrapper>\n);\n\nexport const SmallTag = ({ tag, to }) => (\n  <SmallWrapper>\n    <Link to={to || `/archive/tags/${tag}`}>{tag}</Link>\n  </SmallWrapper>\n);\n\nexport default Tag;\n","import Tag, { SmallTag } from './Tag';\n\nexport { SmallTag };\nexport default Tag;\n","import React from 'react';\nimport styled from 'styled-components'\nimport { media } from '../../utils/theme';\n\nconst Wrapper = styled.h1`\n    font-weight: 500;\n    margin-bottom: 0.5rem;\n    color: #3a3a3a;\n`\n\nconst MarkdownTitle = ({ title }) => <Wrapper>{title}</Wrapper>;\n\nexport default MarkdownTitle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport Tag from '../Tag';\n\nconst Wrapper = styled.h4`\n  margin-bottom: 1rem;\n  color: ${props => darken(0.3, props.theme.colors.light)};\n`;\n\nconst Time = styled.time`\n  font-weight: 500;\n  display: inline-block;\n  margin-right: 1.25rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst TagWrapper = styled.div`\n  display: inline-flex;\n`;\n\nconst Meta = ({ meta }) => {\n  const { date, tags } = meta;\n  return (\n    <Wrapper>\n      <Time dateTime={new Date(date).toLocaleDateString()}>{date}</Time>\n      <TagWrapper>{tags && tags.map(tag => <Tag key={tag} tag={tag} />)}</TagWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Meta;\n","import React from 'react'\n\nconst MarkdownBody = ({html}) => (\n    <div dangerouslySetInnerHTML={{__html: html}} />\n)\n\nexport default MarkdownBody;","import React from 'react'\nimport styled from 'styled-components'\nimport Title from './Title'\nimport Meta from './Meta'\nimport Body from './Body'\nimport { media } from '../../utils/theme';\n\nconst Wrapper = styled.div`\n    min-height: 700px;\n    ${media.lessThan(\"small\")`\n        min-height: 400px;\n    `}\n`\n\nconst MarkdownDoc = ({title, date, html, meta}) => (\n    <Wrapper>\n        <Title title={title} />\n        <Meta meta={meta} />\n        <Body html={html} />\n    </Wrapper>\n)\n\nexport default MarkdownDoc;","import Button from './Button'\n\nexport default Button;","import React from 'react'\nimport styled from 'styled-components'\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n    display: inline-block;\n    height: 38px;\n    padding: 0 30px;\n    color: ${props => props.theme.colors.primaryBlue};\n    font-size: ${props => props.theme.fontSizes.small};\n    font-weight: 500;\n    line-height: 38px;\n    letter-spacing: 0.1rem;\n    text-transform: uppercase;\n    text-decoration: none;\n    white-space: nowrap;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid ${props => props.theme.colors.primaryBlue};\n    cursor: pointer;\n    box-sizing: border-box;\n    &:hover, &:focus {\n        color: ${props => lighten(0.2, props.theme.colors.primaryBlue)};\n        border-color: ${props => lighten(0.2, props.theme.colors.primaryBlue)};\n    }\n`\n\nexport default Button;\n\n","/*\n * @Author: caidong\n * @Date:   2018-06-19 15:43:53\n * @Last Modified by:   caidong\n * @Last Modified time: 2018-06-19 15:59:55\n */\nimport React from 'react';\nimport Link from 'gatsby-link';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport MarkdownDoc from '../components/MarkdownDoc';\nimport Container from '../components/Container';\nimport Button from '../components/Button';\nimport Flex from '../components/Flex';\nimport Layout from '../components/layout';\nimport { graphql } from 'gatsby';\n\nconst ButtonGroup = styled(Flex)`\n  margin-top: 50px;\n  justify-content: center;\n  & button {\n    margin-right: 20px;\n  }\n`;\n\nconst BlogPostTemplate = ({ data, location, pathContext }) => {\n  const { next, prev } = pathContext;\n  const { markdownRemark: post } = data;\n  const { frontmatter, html, fields } = post;\n\n  const { title } = frontmatter;\n\n  const meta = {\n    date: fields.date,\n    tags: frontmatter.tags,\n  };\n\n  return (\n    <Layout>\n      <Container>\n        <Helmet title={`${title} - My blog`} />\n        <MarkdownDoc title={title} meta={meta} html={html} />\n        <ButtonGroup>\n          {prev && (\n            <Link to={prev.fields.path}>\n              <Button>Previous</Button>\n            </Link>\n          )}\n          {next && (\n            <Link to={next.fields.path}>\n              <Button>Next</Button>\n            </Link>\n          )}\n        </ButtonGroup>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        tags\n        excerpt\n      }\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
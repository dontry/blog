{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016-03-05-code-guide.html","result":{"data":{"markdownRemark":{"html":"<p> Recently I got a job as a front-end developer. It's very interesting and exciting. But working in a group is different from working individually. Currently, we are working on a project of developing an online course platform. It's a big project. The programs are intricate and complex. Thus it's very crucial for us to write readable, flexible and maintainable code. This is so true especially for front-end developers Because you work across different languages: html, css, javascript. If you don't write consistently with certain code style, it will be a nightmare as the project grows bigger.  Therefore, a code guide is essential. Here are some code／style guide:</p>\n<ul>\n<li><a href=\"http://alloyteam.github.io/CodeGuide/\">Code guide from QQ alloyteam</a></li>\n<li><a href=\"http://nec.netease.com/standard\">NEC style guide from Netease</a></li>\n<li><a href=\"http://zhibimo.com/read/Ashu/front-end-style-guide/\">Style guide from zhibimo</a></li>\n</ul>","frontmatter":{"title":"Code Guide","tags":["HTML","CSS"],"excerpt":null},"fields":{"date":"March 04, 2016","path":"/2016-03-05-code-guide.html","slug":"/blog/2016/03/05/code-guide.html"}}},"pageContext":{"title":"Code Guide","slug":"/blog/2016/03/05/code-guide.html","prev":{"html":"<p>JavaScript allows us make new method available to a specific type.\nFor example, we can augment Function.prototype with a new method like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    Function.prototype.method = function(name, func){\n        this.prototype[name] = func;\n        return this;\n    };</code></pre></div>\n<p>Morever, we can augment a specific type with a new method like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    Number.method(&#39;integer&#39;, function(){\n        return Math[this &lt; 0 ? &#39;ceiling&#39; : &#39;floor&#39;](this);\n        });\n\n    document.writeln((-10/3).integer())</code></pre></div>\n<p>This method help us convert a Number type to integer.</p>","id":"d0cb65a2-1166-58cf-af50-94250114e107","excerpt":"JavaScript allows us make new method available to a specific type.\nFor example, we can augment Function.prototype with a new method like this: Morever, we can augment a specific type with a new method like this: This method help us convert a Number type to integer.","frontmatter":{"title":"Augmenting types","excerpt":null,"tags":null},"fields":{"slug":"/blog/2016/11/5/augmenting-typs.html","date":"November 04, 2016","path":"/2016-11-5-augmenting-typs.html"}},"next":{"html":"<p>Inheritance is a big topic in JavaScript. Unlike Java or C++ which are object-oriented languages and they can inherit other classes, JavaScript is a prototypal by nature. So the inheritance pattern in JavaScript is far more complicated for me. I still couldn't totally understand how inheritance pattern work after I finished this section.</p>\n<p>Then I found a post which was very helpful. <em><a href=\"http://davidshariff.com/blog/javascript-inheritance-patterns/\">JavaScript Inheritance Patterns</a></em> introduces 3 different ways of how to implement inheritance in JavaScript.</p>\n<h4>Pseudoclassical pattern</h4>\n<ol>\n<li>Invoke a constructor function.</li>\n<li>Point a child’s prototype to the parent’s prototype for inheritance to occur.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Point a child's prototype to a parent's prototype\n **/</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">extendObj</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">childObj<span class=\"token punctuation\">,</span> parentObj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    childObj<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> parentObj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//base human object</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Human</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//inhertiable attributes / methods </span>\n<span class=\"token class-name\">Human</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    gender<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    planetOfBirth<span class=\"token operator\">:</span> <span class=\"token string\">'Earth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">sayGender</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'\\'s gender is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">sayPlanet</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' was born on '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>planetOfBirth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//male</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Male</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Davide'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//inherits human</span>\n<span class=\"token function\">extendObj</span><span class=\"token punctuation\">(</span>Male<span class=\"token punctuation\">,</span> Human<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Female</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//inherits human</span>\n<span class=\"token function\">extendObj</span><span class=\"token punctuation\">(</span>Female<span class=\"token punctuation\">,</span> Human<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//new instances</span>\n<span class=\"token keyword\">var</span> davide <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Male</span><span class=\"token punctuation\">(</span><span class=\"token string\">'David'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> jane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Female</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\ndavid<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David says my gender is Male</span>\njane<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane says my gender is Female</span>\n\n<span class=\"token class-name\">Male</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>planetOfBirth <span class=\"token operator\">=</span> <span class=\"token string\">'Mars'</span><span class=\"token punctuation\">;</span>\ndavid<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David was born on Mars</span>\njane<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane was born on Mars</span></code></pre></div>\n<h4>Functional pattern</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">human</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    that<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    that<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    that<span class=\"token punctuation\">.</span>planetOfBirth <span class=\"token operator\">=</span> <span class=\"token string\">'Earth'</span><span class=\"token punctuation\">;</span>\n    that<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayGender</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'\\'s gender is '</span> <span class=\"token operator\">+</span> that<span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    that<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sayPlanet</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' was born on '</span> <span class=\"token operator\">+</span> that<span class=\"token punctuation\">.</span>planetOfBirth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> that<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">male</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token function\">human</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    that<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> that<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> david <span class=\"token operator\">=</span> <span class=\"token function\">male</span><span class=\"token punctuation\">(</span><span class=\"token string\">'David'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> jane <span class=\"token operator\">=</span> <span class=\"token function\">female</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndavid<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David says my gender is Male</span>\njane<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane says my gender is Female</span>\n\ndavid<span class=\"token punctuation\">.</span>planetOfBirth <span class=\"token operator\">=</span> <span class=\"token string\">'Mars'</span><span class=\"token punctuation\">;</span>\ndavid<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David was born on Mars</span>\njane<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane was born on Earth</span></code></pre></div>\n<h4>Prototypal pattern</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/***************************************************************\n     * Helper functions for older browsers\n     ***************************************************************/</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">create</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parentObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">tmpObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n            tmpObj<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> parentObj<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tmpObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'defineProperties'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">defineProperties</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/*************************************************************/</span>\n\n    <span class=\"token keyword\">var</span> human <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        gender<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        planetOfBirth<span class=\"token operator\">:</span> <span class=\"token string\">'Earth'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">sayGender</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' says my gender is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">sayPlanet</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' was born on '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>planetOfBirth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> male <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        gender<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> female <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>human<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        gender<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> david <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>male<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'David'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        planetOfBirth<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'Mars'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> jane <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>female<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    david<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David says my gender is Male</span>\n    david<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// David was born on Mars</span>\n\n    jane<span class=\"token punctuation\">.</span><span class=\"token function\">sayGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane says my gender is Female</span>\n    jane<span class=\"token punctuation\">.</span><span class=\"token function\">sayPlanet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane was born on Earth</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","id":"55dc3fda-629a-5f23-b109-8540c85f64d2","excerpt":"Inheritance is a big topic in JavaScript. Unlike Java or C++ which are object-oriented languages and they can inherit other classes, JavaScript is a prototypal by nature. So the inheritance pattern in JavaScript is far more complicated for me. I still couldn't totally understand…","frontmatter":{"title":"Inheritance (JS the good parts)","excerpt":null,"tags":null},"fields":{"slug":"/blog/2015/09/22/inheritance.html","date":"September 21, 2015","path":"/2015-09-22-inheritance.html"}}}},"staticQueryHashes":[]}
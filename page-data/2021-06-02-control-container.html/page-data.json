{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-06-02-control-container.html","result":{"data":{"markdownRemark":{"html":"<p>A common nested form usually looks like this. Here <em>profileForm</em> contains a nested form <em>address</em> FormGroup. If <em>profileForm</em> needs to get access the <em>address</em> FormGroup, we can simply do this: <code class=\"language-text\">profileForm.get(&#39;address&#39;)</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormGroup<span class=\"token punctuation\">,</span> FormControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'app-profile-editor'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./profile-editor.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./profile-editor.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfileEditorComponent</span> <span class=\"token punctuation\">{</span>\n  profileForm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    firstName<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    lastName<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    address<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      street<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      city<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      state<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      zip<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">[formGroup]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>profileForm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(ngSubmit)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSubmit()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    First Name:\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n    Last Name:\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">formGroupName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n      Street:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>street<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n      City:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>city<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n      State:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>state<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n      Zip Code:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">formControlName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zip<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">formArrayName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>aliases<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>Aliases<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">(click)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addAlias()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Add Alias<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let alias of aliases.controls; let i=index<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token comment\">&lt;!-- The repeated alias template --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n        Alias:\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[formControlName]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>i<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[disabled]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>!profileForm.valid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>However, if we want to create a reusable or sophisticated component for <em>address</em> formGroup. How can the parent form <em>profileForm</em> access or control it? That's how <code class=\"language-text\">ControlContainer</code> comes into play. </p>\n<p>The injected <code class=\"language-text\">ControlContainer</code> looks up the component tree and finds the parent form.\nIt allows us to access the parent form across components. From there we can use the <code class=\"language-text\">formControlName</code> for our <code class=\"language-text\">FormControls</code> as expected.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Profile form (parent form)</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormGroup<span class=\"token punctuation\">,</span> FormControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'app-profile-editor'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./profile-editor.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./profile-editor.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfileEditorComponent</span> <span class=\"token punctuation\">{</span>\n  profileForm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    firstName<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    lastName<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Address Form (child form)</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ControlContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'app-address'</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  &lt;form  *ngIf=\"ogFormGroup\" [formGroup]=\"addressForm\">\n    &lt;h5>Address:&lt;/h5>\n    &lt;div class=\"form-group\">\n      &lt;label for=\"name\">Street Name&lt;/label>\n      &lt;input formControlName=\"street\" />\n    &lt;/div>\n    &lt;div class=\"form-group\">\n      &lt;label for=\"name\">City&lt;/label>\n      &lt;input formControlName=\"city\" />\n    &lt;/div>\n    &lt;div class=\"form-group\">\n      &lt;label for=\"name\">State&lt;/label>\n      &lt;input formControlName=\"state\" />\n    &lt;/div>\n    &lt;div class=\"form-group\">\n      &lt;label for=\"name\">Zip&lt;/label>\n      &lt;input formControlName=\"zip\" />\n    &lt;/div>\n  &lt;/form>\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./address.component.less'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AddressComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> parentForm<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> addressForm<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">public</span> controlContainer<span class=\"token operator\">:</span> ControlContainer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addressForm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      street<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      city<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      state<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      zip<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentForm <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controlContainer<span class=\"token punctuation\">.</span>control<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentForm<span class=\"token punctuation\">.</span><span class=\"token function\">setControl</span><span class=\"token punctuation\">(</span><span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addressForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addressForm<span class=\"token punctuation\">.</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Angular ControlContainer","tags":["Angular"],"excerpt":"ControlContainer solves the issue how the parent form accesses or controls and child form when they reside in different components. "},"fields":{"date":"June 01, 2021","path":"/2021-06-02-control-container.html","slug":"/blog/2021/06/02/control-container.html"}}},"pageContext":{"title":"Angular ControlContainer","slug":"/blog/2021/06/02/control-container.html","prev":{"html":"<h3><BrowserRouter></h3>\n<p>A <code class=\"language-text\">&lt;Router&gt;</code> uses the HTML5 history API (<code class=\"language-text\">pushState</code>, <code class=\"language-text\">replaceState</code> and the <code class=\"language-text\">popstate</code> event) to keep your UI in sync with the URL.</p>\n<h5>basename: string</h5>\n<p>The base URL for all locations. If your app is served from a sub-directory on your server, you’ll want to set this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.</p>\n<h5>forceRefresh: bool</h5>\n<p>If true, the router will use full page refreshes on page navigation. You probably only want this in browsers that don’t support the HTML5 history API.</p>\n<h5>keyLength: number</h5>\n<p>The length of location.key. Defaults to 6</p>\n<hr>\n<h3><Route></h3>\n<h5>Route render methods</h5>\n<p>There are 3 ways to render something with a <Route>:</p>\n<ul>\n<li><code class=\"language-text\">&lt;Route component&gt;</code></li>\n<li><code class=\"language-text\">&lt;Route render&gt;</code></li>\n<li><code class=\"language-text\">&lt;Route children&gt;</code></li>\n</ul>\n<p>Each is useful in different circumstances. You should use only one of these props on a given <Route>. See their explanations below to understand why you have 3 options. Most of the time you’ll use component.</p>\n<h5>component</h5>\n<p>A React component to render only when the location matches. It will be rendered with route props.</p>\n<p>The router uses React.createElement to create a new React element every render.</p>\n<h5>render: function</h5>\n<p>This allows for convenient inline rendering and wrapping without the undesired remounting explained above.Instead of having a new React element created for you using the component prop, you can pass in a function to be called when the location matches. The render prop receives all the same route props (match, location and history) as the component render prop.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/home<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Home</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// wrapping/composing</span>\n<span class=\"token comment\">// You can spread routeProps to make them available to your rendered Component</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FadingRoute</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> component<span class=\"token operator\">:</span> Component<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span>\n    <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">routeProps</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FadeIn</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">routeProps</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FadeIn</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>children: function</h5>\n<p>Sometimes you need to render whether the path matches the location or not. In these cases, you can use the function children prop. It works exactly like render except that <strong>it gets called no matter there is a match or not.</strong></p>\n<p>This could be useful for animations:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">children</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Animate will always render, so you can use lifecycles\n      to animate its child in and out */</span><span class=\"token punctuation\">}</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animate</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>match <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Something</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Animate</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Warning: Both <Route component> and <Route render> take precedence over <Route children> so don’t use more than one in the same <Route>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItemLink</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/somewhere<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItemLink</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/somewhere-else<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ListItemLink</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> to<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span>\n    <span class=\"token attr-name\">path</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">children</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>match <span class=\"token operator\">?</span> <span class=\"token string\">'active'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3><code class=\"language-text\">&lt;Prompt&gt;</code></h3>\n<p>Used to prompt the user before navigating away from a page. When your application enters a state that should prevent the user from navigating away (like a form is half-filled out), render a <Prompt>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Prompt</span></span> <span class=\"token attr-name\">when</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>formIsHalfFilledOut<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Are you sure you want to leave?<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Could be useful for animations:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">children</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Animate will always render, so you can use lifecycles\n      to animate its child in and out */</span><span class=\"token punctuation\">}</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animate</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>match <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Something</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Animate</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<hr>\n<h3><code class=\"language-text\">&lt;HashRouter&gt;</code></h3>\n<p>A <code class=\"language-text\">&lt;Router&gt;</code> that uses the hash portion of the URL (i.e. window.location.hash) to keep your UI in sync with the URL.</p>\n<hr>\n<h3><code class=\"language-text\">&lt;NavLink&gt;</code></h3>\n<p>A special version of the <Link> that will add styling attributes to the rendered element when it matches the current URL.</p>\n<h5>activeClassName: string</h5>\n<p>The class to give the element when it is active. The default given class is active. This will be joined with the className prop.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavLink</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/faq<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">activeClassName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  FAQs\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NavLink</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h5>activeStyle: object</h5>\n<p>The styles to apply to the element when it is active.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavLink</span></span>\n  <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/faq<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">activeStyle</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  FAQs\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NavLink</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<hr>\n<h3>history</h3>\n<p>The term “history” and \"history object\" in this documentation refers to the history package, which is one of only 2 major dependencies of React Router (besides React itself), and which provides several different implementations for managing session history in JavaScript in various environments.The following terms are also used:</p>\n<ul>\n<li>“browser history” - A DOM-specific implementation, useful in web browsers that support the HTML5 history API</li>\n<li>“hash history” - A DOM-specific implementation for legacy web browsers</li>\n<li>“memory history” - An in-memory history implementation, useful in testing and non-DOM environments like React Native</li>\n</ul>\n<p>history objects typically have the following properties and methods:</p>\n<ul>\n<li>length - (number) The number of entries in the history stack</li>\n<li>action - (string) The current action (PUSH, REPLACE, or POP)</li>\n<li>\n<p>location - (object) The current location. May have the following properties:</p>\n<ul>\n<li>pathname - (string) The path of the URL</li>\n<li>search - (string) The URL query string</li>\n<li>hash - (string) The URL hash fragment</li>\n<li>state - (object) location-specific state that was provided to e.g. push(path, state) when this location was pushed onto the stack. Only available in browser and memory history.</li>\n</ul>\n</li>\n<li>push(path, [state]) - (function) Pushes a new entry onto the history stack</li>\n<li>replace(path, [state]) - (function) Replaces the current entry on the history stack</li>\n<li>go(n) - (function) Moves the pointer in the history stack by n entries</li>\n<li>goBack() - (function) Equivalent to go(-1)</li>\n<li>goForward() - (function) Equivalent to go(1)</li>\n<li>block(prompt) - (function) Prevents navigation (see the history docs)</li>\n</ul>\n<hr>\n<h3>location</h3>\n<p>Locations represent where the app is now, where you want it to go, or even where it was. It looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">'ac3df4'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// not with HashHistory!</span>\n  pathname<span class=\"token operator\">:</span> <span class=\"token string\">'/somewhere'</span>\n  search<span class=\"token operator\">:</span> <span class=\"token string\">'?some=search-string'</span><span class=\"token punctuation\">,</span>\n  hash<span class=\"token operator\">:</span> <span class=\"token string\">'#howdy'</span><span class=\"token punctuation\">,</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>userDefined<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The router will provide you with a location object in a few places:</p>\n<ul>\n<li>Route component as this.props.location</li>\n<li>Route render as ({ location }) => ()</li>\n<li>Route children as ({ location }) => ()</li>\n<li>withRouter as this.props.location</li>\n</ul>\n<p>It is also found on history.location but you shouldn’t use that because its mutable. You can read more about that in the history doc.A location object is never mutated so you can use it in the lifecycle hooks to determine when navigation happens, this is really useful for data fetching and animation.</p>\n<hr>\n<h3>match</h3>\n<p>A match object contains information about how a <strong><Route path></strong> matched the URL. match objects contain the following properties:</p>\n<ul>\n<li>params - (object) Key/value pairs parsed from the URL corresponding to the dynamic segments of the path</li>\n<li>isExact - (boolean) true if the entire URL was matched (no trailing characters)</li>\n<li>path - (string) The path pattern used to match. Useful for building nested <Route>s</li>\n<li>url - (string) The matched portion of the URL. Useful for building nested <Link>s</li>\n<li>-</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/relative-path</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You’ll have access match objects in various places:</p>\n<ul>\n<li>Route component as this.props.match</li>\n<li>Route render as ({ match }) => ()</li>\n<li>Route children as ({ match }) => ()</li>\n<li>withRouter as this.props.match</li>\n<li>matchPath as the return value</li>\n</ul>\n<p>If a Route does not have a path, and therefore always matches, you’ll get the closest parent match. Same goes for withRouter.</p>\n<h3>null match</h3>\n<p>null matches A <Route> that uses the children prop will call its children function even when the route’s path does not match the current location. When this is the case, the match will be null. Being able to render a <Route>'s contents when it does match can be useful, but certain challenges arise from this situation.</p>\n<p>The default way to “resolve” URLs is to join the match.url string to the “relative” path. <code class=\"language-text\">${match.url}/relative-path</code></p>\n<p>If you attempt to do this when the match is null, you will end up with a TypeError. This means that it is considered unsafe to attempt to join “relative” paths inside of a <Route> when using the children prop.</p>\n<hr>\n<h3>matchPath</h3>\n<p>This lets you use the same matching code that <Route> uses except outside of the normal render cycle, like gathering up data dependencies before rendering on the server.import { matchPath } from 'react-router'</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">matchPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users/123'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/users/:id'</span><span class=\"token punctuation\">,</span>\n  exact<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  strict<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>pathname</h5>\n<p>The first argument is the pathname you want to match. If you're using this on the server with Node.js, it would be req.path.</p>\n<h5>props</h5>\n<p>The second argument are the props to match against, they are identical to the matching props Route accepts:</p>\n<hr>\n<h3>withRouter</h3>\n<p>You can get access to the history object's properties and the closest <Route>'s match via the withRouter higher-order component. withRouter will pass updated match, location, and history props to the wrapped component whenever it renders</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// A simple component that shows the pathname of the current location</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ShowTheLocation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    match<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n    location<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n    history<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>isRequired\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> match<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> history <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">You are now at </span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  withRouter<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// This does not</span>\n<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// nor</span>\n<span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  withRouter\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<h3>Takeaways:</h3>\n<ol>\n<li>Using withRouter, we can access <strong>history</strong>, <strong>match</strong> and <strong>location</strong> props.</li>\n<li>\n<p>There are 3 ways for rendering with a <code class=\"language-text\">&lt;Route&gt;</code></p>\n<ul>\n<li><code class=\"language-text\">&lt;Route component&gt;</code> easiest, mount a new component everytime when the path is matched</li>\n<li><code class=\"language-text\">&lt;Route render&gt;</code> convenient inline rendering without undesired remounting.</li>\n<li><code class=\"language-text\">&lt;Route children&gt;</code> render no matter if it matches the path</li>\n</ul>\n</li>\n<li><code class=\"language-text\">&lt;NavLink&gt;</code> will add styling attributes when it matches the current URL</li>\n</ol>","id":"eb40d728-f3db-5377-9177-0c4e59496041","excerpt":"A  uses the HTML5 history API (,  and the  event) to keep your UI in sync with the URL. basename: string The base URL for all locations. If your app is served from a sub-directory on your server, you’ll want to set this to the sub-directory. A properly formatted basename should…","frontmatter":{"title":"React Router Essential","excerpt":"The core concepts of React Router","tags":["REACT-ROUTER","REACT"]},"fields":{"slug":"/blog/2018/04/05/React-Router.html","date":"April 04, 2018","path":"/2018-04-05-React-Router.html"}},"next":{"html":"<p>Recently I am asked to create a tab bar which is supposed to work like the one on Chrome browser. To be more specific, when the tabs don't take up the full width, they have a fixed size. When the total width of the tabs is over the the bound of the tab bar, the tabs should shrink and divide the bar space evenly.</p>\n<p>I tried out several solutions, most of them just got the tab bar overflowed or increased the width of the tab bar. Eventually, my hunch was telling me that this was a best use case of using flex-box layout. I knew flex-box quite a while and made use of it in many situations. However, <em>justify-content</em>, <em>align-items</em>, and <em>flex-direction</em> are three properties I used most. I realized that there were some other properties that I thought I knew, but I actually didn't understand how to take a full advantage of them. They are <em>flex-grow</em>, <em>flex-shrink</em>, and <em>flex-basis</em>. And the most tricky one is <em>flex-basis</em>. It defines the default size of an element before the remaining space is distributed. Its default value is 'auto' which means it looks at the width and height property. It's worth noting that the container component should have an indicative size before these three flex rules kick in.</p>\n<p>First, we give a fixed width to tab container and apply flex layout to it.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> flex-start<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #000<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #acacac<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For tabs, <em>flex-grow</em> is set to 0 which means its size is based off the <em>flex-basis</em> when there are remaining space in the container. On the other hand,\n<em>flex-shrink</em> is 1 which means the tabs are distributed evenly based on the width of the container if the container is out of empty space.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.tab</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #a00<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Viola! Now we have a tab bar just works like any others. Here is a demo you can play around with.</p>\n<iframe height=\"365\" style=\"width: 100%;\" scrolling=\"no\" title=\"flexbox-tabs\" src=\"//codepen.io/dontry018/embed/WPLPYv/?height=265&theme-id=0&default-tab=js,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/dontry018/pen/WPLPYv/'>flexbox-tabs</a> by loconomo\n  (<a href='https://codepen.io/dontry018'>@dontry018</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>","id":"80ba7cbe-8977-5d12-a52c-c1144bb9256e","excerpt":"Recently I am asked to create a tab bar which is supposed to work like the one on Chrome browser. To be more specific, when the tabs don't take up the full width, they have a fixed size. When the total width of the tabs is over the the bound of the tab bar, the tabs should shrink…","frontmatter":{"title":"Create a tab bar with flex-box layout","excerpt":"Let's use flex-box layout to create a tab bar","tags":["CSS","LAYOUT"]},"fields":{"slug":"/blog/2019/01/31/flex-box.html","date":"January 30, 2019","path":"/2019-01-31-flex-box.html"}}}},"staticQueryHashes":[]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-06-20-typescript-decorator-01.html","result":{"data":{"markdownRemark":{"html":"<p>Decorator is very powerful feature in Typescript. It can add additional information or steps to support annotating or modifying. It empowers Typescript with AOP(Aspect-oriented-programming), DI (Dependency Injection) or even meta programming. It's widely used in Angular and Nestjs. If you are familiar with Java SpringBoot, you find them very similar. Whereas in Java,  Decorator is called Annotation.</p>\n<p>To enable decorator feature, we need to enable <code class=\"language-text\">experimentalDecorators</code> in <code class=\"language-text\">tsconfig.json</code> first.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>There are 5 types of decorators including Class Decorators, Method Decorators, Accessor Decorators, Property Decorators, Parameter Decorators. Each decorator has a slightly different group of parameters. If there are more than 1 type of decorators are added, they will be executed in a well defined order:</p>\n<ol>\n<li>Parameter Decorators, followed by Method, Accessor, or Property Decorators are applied for each instance member.</li>\n<li>Parameter Decorators, followed by Method, Accessor, or Property Decorators are applied for each static member.</li>\n<li>Parameter Decorators are applied for the constructor.</li>\n<li>Class Decorators are applied for the class.</li>\n</ol>\n<p>For further information of decorators, you can visit this <a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html#decorator-factories\">official documentation</a>.</p>\n<p>Here is a playground for Typescript decorators.</p>\n<iframe src=\"https://codesandbox.io/embed/green-mountain-yskzh?autoresize=1&fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"green-mountain-yskzh\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2>Dependency Injection</h2>\n<h2>Class Validator</h2>\n<h2>Routing Controller</h2>\n<p>Add the action to <code class=\"language-text\">MetadataArgsStorage</code>;</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>route<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> RegExp<span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> HandlerOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>object<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span> methodName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getMetadataArgsStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token operator\">:</span> object<span class=\"token punctuation\">.</span><span class=\"token keyword\">constructor</span><span class=\"token punctuation\">,</span>\n      method<span class=\"token operator\">:</span> methodName<span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">,</span>\n      route<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">createExecutor</span><span class=\"token punctuation\">(</span>driver<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> RoutingControllerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">RoutingControllers</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">registerInterceptors</span><span class=\"token punctuation\">(</span>interceptorClasses<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">registerMiddlewares</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before'</span><span class=\"token punctuation\">,</span> middlewareClasses<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">registerControllers</span><span class=\"token punctuation\">(</span>controllerClasses<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">registerMiddlewares</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after'</span><span class=\"token punctuation\">,</span> middlewareClasses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Register the actions of controllers to driver;</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">registerControllers</span><span class=\"token punctuation\">(</span>classes<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> controllers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>metadataBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">buildControllerMetadata</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    controllers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>controller <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      controller<span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>actionMetadata <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> interceptorFns <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepareInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">,</span>\n          <span class=\"token operator\">...</span>actionMetadata<span class=\"token punctuation\">.</span>controllerMetadata<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">,</span>\n          <span class=\"token operator\">...</span>actionMetadata<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span><span class=\"token function\">registerAction</span><span class=\"token punctuation\">(</span>actionMetadata<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>action<span class=\"token operator\">:</span> Action<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeAction</span><span class=\"token punctuation\">(</span>actionMetadata<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> interceptorFns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>driver<span class=\"token punctuation\">.</span><span class=\"token function\">registerRoutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">registerAction</span><span class=\"token punctuation\">(</span>actionMetadata<span class=\"token operator\">:</span> ActionMetadata<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">executeCallback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> Action<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>express<span class=\"token punctuation\">[</span>actionMetadata<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>route<span class=\"token punctuation\">,</span> routeGuard<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>beforeMiddlewares<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>defaultMiddlewares<span class=\"token punctuation\">,</span> routeHandler<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>afterMiddlewares<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Reflect-metadata</h2>","frontmatter":{"title":"TypesScript Decorator 01","tags":["TYPESCRIPT"],"excerpt":null},"fields":{"date":"June 19, 2021","path":"/2021-06-20-typescript-decorator-01.html","slug":"/blog/2021/06/20/typescript-decorator-01.html"}}},"pageContext":{"id":"b3f8f1ce-836c-55ad-b23d-42ad5e2c4156","prev":{"id":"336b5b9e-64af-527e-bc87-8d18245c3031","frontmatter":{"title":"Webpack Overview","excerpt":"Key concepts of Webpack","tags":["WEBPACK"]},"fields":{"path":"/2020-08-01-webpack.html"}},"next":{"id":"0b4df791-e02b-5b52-becd-e56e532e5641","frontmatter":{"title":"React component lifecycle","excerpt":"React component lifecycle is a very important part of React. I created a demo to illustrate how it works with full details","tags":["REACT"]},"fields":{"path":"/2019-06-14-react-life-cycle.html"}}}},"staticQueryHashes":[]}